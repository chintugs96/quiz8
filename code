import 'dart:async';
import 'package:flutter/material.dart';

void main() {
  runApp(QuizApp());
}

class QuizApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Quiz Game',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(primarySwatch: Colors.blue),
      home: TopicSelectionScreen(),
    );
  }
}

class TopicSelectionScreen extends StatelessWidget {
  final List<String> topRowTopics = [
    "Food",
    "Geography",
    "Sports",
    "Arts and Culture",
  ];

  final List<String> bottomRowTopics = [
    "Plants and Animals",
    "Technology",
    "Science",
    "Space",
  ];

  void navigateToQuiz(BuildContext context, String topic) {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (_) => QuizScreen(selectedTopic: topic),
      ),
    );
  }

  Widget buildTopicButton(String text, BuildContext context,
      {double height = 100, double width = double.infinity}) {
    return SizedBox(
      width: width,
      height: height,
      child: ElevatedButton(
        style: ElevatedButton.styleFrom(
          backgroundColor: Colors.lightBlueAccent,
          foregroundColor: Colors.white,
          textStyle: TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
          shape:
              RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
        ),
        onPressed: () => navigateToQuiz(context, text),
        child: Text(text, textAlign: TextAlign.center),
      ),
    );
  }

  Widget buildGridRow(List<String> topics, BuildContext context) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
      children: topics
          .map((topic) => Expanded(
                child: Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: buildTopicButton(topic, context),
                ),
              ))
          .toList(),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Choose a Topic')),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            buildGridRow(topRowTopics.sublist(0, 2), context),
            buildGridRow(topRowTopics.sublist(2, 4), context),
            SizedBox(height: 10),
            buildTopicButton("World History", context, height: 120),
            SizedBox(height: 10),
            buildGridRow(bottomRowTopics.sublist(0, 2), context),
            buildGridRow(bottomRowTopics.sublist(2, 4), context),
          ],
        ),
      ),
    );
  }
}

class QuizScreen extends StatefulWidget {
  final String selectedTopic;

  QuizScreen({required this.selectedTopic});

  @override
  _QuizScreenState createState() => _QuizScreenState();
}

class _QuizScreenState extends State<QuizScreen> {
  int currentQuestion = 0;
  int score = 0;
  int timeLeft = 15;
  Timer? _timer;

  final List<Map<String, dynamic>> questions = List.generate(5, (index) {
    return {
      "question": "What is this?",
      "image": "", // Placeholder for now
      "options": ["Option 1", "Option 2", "Option 3", "Option 4"],
      "answer": 1,
    };
  });

  @override
  void initState() {
    super.initState();
    startTimer();
  }

  void startTimer() {
    timeLeft = 15;
    _timer = Timer.periodic(Duration(seconds: 1), (timer) {
      if (timeLeft == 0) {
        timer.cancel();
        autoNextQuestion();
      } else {
        setState(() {
          timeLeft--;
        });
      }
    });
  }

  void autoNextQuestion() {
    if (currentQuestion < questions.length - 1) {
      setState(() {
        currentQuestion++;
      });
      startTimer();
    } else {
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(
          builder: (_) => ResultScreen(score: score, total: questions.length),
        ),
      );
    }
  }

  void answerQuestion(int selected) {
    _timer?.cancel();
    if (selected == questions[currentQuestion]['answer']) {
      score++;
    }
    autoNextQuestion();
  }

  @override
  void dispose() {
    _timer?.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    var q = questions[currentQuestion];
    return Scaffold(
      appBar: AppBar(
        title:
            Text('${widget.selectedTopic} - Question ${currentQuestion + 1}'),
      ),
      body: Padding(
        padding: EdgeInsets.all(16),
        child: Column(
          children: [
            Text(
              q["question"],
              style: TextStyle(fontSize: 32, fontWeight: FontWeight.bold),
              textAlign: TextAlign.center,
            ),
            SizedBox(height: 10),
            Text("⏳ Time left: $timeLeft s",
                style: TextStyle(fontSize: 18, color: Colors.red)),
            SizedBox(height: 20),
            Container(
              width: double.infinity,
              height: 200,
              color: Colors.grey[300],
              alignment: Alignment.center,
              child: Text("[Image Placeholder]"),
            ),
            SizedBox(height: 20),
            Expanded(
              child: GridView.count(
                crossAxisCount: 2,
                crossAxisSpacing: 16,
                mainAxisSpacing: 16,
                childAspectRatio: 1, // makes each item a square
                children: List.generate(4, (i) {
                  return ElevatedButton(
                    onPressed: () => answerQuestion(i),
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.blueAccent,
                      foregroundColor: Colors.white,
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(12),
                      ),
                      textStyle:
                          TextStyle(fontSize: 18, fontWeight: FontWeight.bold),
                    ),
                    child: Text(q["options"][i], textAlign: TextAlign.center),
                  );
                }),
              ),
            ),
          ],
        ),
      ),
    );
  }
}

class ResultScreen extends StatelessWidget {
  final int score;
  final int total;

  const ResultScreen({required this.score, required this.total});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("Results")),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text("🎉 Quiz Complete!", style: TextStyle(fontSize: 28)),
            SizedBox(height: 20),
            Text("Your Score: $score / $total", style: TextStyle(fontSize: 22)),
            SizedBox(height: 40),
            ElevatedButton(
              onPressed: () {
                Navigator.pushAndRemoveUntil(
                  context,
                  MaterialPageRoute(builder: (_) => TopicSelectionScreen()),
                  (route) => false,
                );
              },
              child: Text("Play Again"),
            ),
          ],
        ),
      ),
    );
  }
}
